Install required Software:
==========================
* Docker for Windows / Linux
* GDAL for widnows: https://trac.osgeo.org/gdal/wiki/OSGeo4W ### For AWS: https://gist.github.com/mojodna/2f596ca2fca48f08438e
* Gzip
* Python3 
* remove email from local setup
python3 -m pip install logger docker progressbar2 json requests zipfile tarfile re argparse csv math httplib2 oauth2client base64 mimetypes email apiclient boto3 gdal python3-devel
Start Docker Server with 2 covereges:
=====================================

1. Run Docker for Windows

2. Go to the folder where you have the Navitia docker git project: ...\navitia-docker-compose

3. run "Git Bash" and type: 
$ git pull

4. Once done Change directory to "\TransitAnalystIsrael\root\assets":
$ cd "C:\Dev\TransitAnalystIsrael\root\assets" 
and type:
$ docker-compose up

Don't close git bash!


5. Once you see all containers started, open Windows Power Shell (not cmd!) - the path is not improtant and type:
docker ps

a list of docker containers should appear, copy the name of the worker container from the NAMES column, e.g. "navitia-docker-compose_tyr_worker_1"

6. Type the following command in the power shell in order to conenct to the worker container:
docker exec -i -t navitia-docker-compose_tyr_worker_1 /bin/bash

7. Once in, type the following commands in order to have 2 coverages as a base setup:
cd /srv/ed/output
cp default.nav.lz4 secondary-cov.nav.lz4
exit()

8. Go back to Git Bash terminal with running log and press CTRL+C to stop the docker container.
If, you closed the bash terminal, re-open it and type:
$ docker stop $(docker ps -a -q)

9. Start docker with 2 covereges by opening a Git Bash terminal at "...\TransitAnalystIsrael\root\assets" and running:
$ docker-compose -f docker-compose.yml -f docker-israel-custom-instances.yml up

10. Wait 2-3 minutes and then browse to "http://localhost:9191/v1/coverage/default" and "http://localhost:9191/v1/coverage/secondary-cov".
    You should see "start_production_date:" field with an actual date (if you see "dead-socket" wait 1-2 min. more)
	
Dokcer Server is ready!

Make sure you have the following python3(!) modules installed:
==============================================================
logger
docker
progressbar2
json
requests
zipfile
tarfile
re
argparse
csv
math
httplib2
oauth2client
base64
mimetypes
email
apiclient
boto3
gdal

GDAL installation on AWS Linux:
===============================
sudo yum -y update
sudo yum-config-manager --enable epel
sudo yum -y install make automake gcc gcc-c++ libcurl-devel proj-devel geos-devel
cd /tmp
curl -L http://download.osgeo.org/gdal/2.3.3/gdal-2.3.3.tar.gz | tar zxf -
--curl -L http://download.osgeo.org/gdal/2.4.0/gdal-2.4.0.tar.gz | tar zxf -
cd gdal-2.3.3/
--cd gdal-2.4.0/
./configure --prefix=/usr/local --with-python
sudo make -j4
sudo make install
---
sudo make install
sudo easy_install GDAL
****sudo python3 -m easy_install GDAL
*****
export LD_LIBRARY_PATH="/usr/local/lib:$LD_LIBRARY_PATH"
sudo ldconfig
----
cd /usr/local
tar zcvf ~/gdal-gdal-2.3.3-amz1.tar.gz *
make clean 

Installing the python moduel for gdal requires installing python3 dev tools:
sudo yum install python3-devel

