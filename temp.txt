8. Provide the Navitia server on the EC2 with the API gateway for integration on the client side (HTML & JS)
============================================================================================================
a. Copy the Invoke URL from the "Stage" page in the AWS API Gateway console.
b. Using putty connect to the EC2
c. Go to the Transit Analyst config file and open for edit:
$ cd TransitAnalystIsrael/root/
$ vim transitanalystisrael_config.py

d. Change the URL:
- Press I to go into edit mode
- Using the down arrow button, scroll all the way down until you see: time_map_server_aws_url
- Change the value of time_map_server_aws_url to the value of the Invoke URL mentioned above (it should look the same as existing apart from the part after the http://)
- Press Esc -> type :wq -> press Enter


11. Create S3 buckets to host the web files for monthly auto update:
======================================================================
When working with an EC2, the web content is served from S3 buckets. 
For Monthly Auto Update - During the update process, the processed files are uplaoded to the buckets.
WARNING: The bucket names are universally unique and the Transit Analyst Israel comes with the following names: transitanalystisrael-current, transitanalystisrael-past, transitanalystisrael-backup.
If you run the monthly auto update code as-is with the transitanalystisrael@gmail.com account, this will override the current production env.
If running only On-Demand dates then the bucket used ("transitanalystisrael-yyyymmdd")is generated by the code and does not need to be created at setup.
	
11.1. Creating new buckets for an EC2 instance that shouldn't be transitanalystisrael@gmail.com prod env.:
-------------------------------------------------------------------------------------------------------
a. Access the S3 Console: https://s3.console.aws.amazon.com/s3/
b. Click "Create Bucket" -> Enter name <some-prefix>-current e.g. "blablablablablabla-current" -> Select region (should be the same as the EC2) 
c. Skip the "Configure Options"
d. In the "Set Permissions" screen uncheck the following options:
   - "Block new public bucket policies (Recommended)"
   - "Block public and cross-account access if bucket has public policies (Recommended)"
   So in total you have the 2 top checked boxes and 2 unchecked boxes at the bottom
   Click "Next" -> "Create Bucket"
 e. Access the created bucket -> "Properties" tab -> Click "Static website hosting" -> select "Use this bucket to host a website" -> Index document: "index.html" -> click "save"
 f. Go to the "permissions" tab -> "bucket policy" -> enter the following code and enter the bucket name in the brackets:
	{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "PublicReadGetObject",
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::<bucket-name>/*"
        }
	]
	}
	Click "Save"
 g. Repeat steps b-f for a bucket called <some-prefix>-past and <some-prefix>-backup (during the creation there's an option to copy settings from existing bucket)

11.2 Updating Transit Analyst Israel with the new buckets:
==========================================================
a. Using putty connect to the EC2
b. Go to the Upload to S3 code and change the names of the buckets:
	$ cd ~/TransitAnalystIsrael/root/
	$ vim upload2aws_s3.py 
	Type the following commands one by one with your bucket names replacing <some-prefix>-current, <some-prefix>-past and <some-prefix>-backup (DO NOT COPY-PASTE):
: 
:%s/transitanalystisrael-current/<some-prefix>-current/g
:%s/transitanalystisrael-past/<some-prefix>-past/g 
:%s/transitanalystisrael-backup/<some-prefix>-backup/g
:wq